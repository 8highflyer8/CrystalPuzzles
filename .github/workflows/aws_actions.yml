name: Ci-Cd-Pipeline-to-AWS

env:
  EB_PACKAGE_S3_BUCKET_NAME: "crystall-fastapi-app-packages"  # Corrected spelling
  EB_APPLICATION_NAME: "FastApiCr"
  EB_ENVIROMENT_NAME:  "FastApiCr-env-1"
  DEPLOY_PACKAGE_NAME:  "CrystalPuzzles_${{ github.sha }}.zip"
  AWS_REGION_NAME: "eu-central-1"

on:
  push:
    branches:
      - release  # Correct trigger syntax      

jobs:
  tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository from specific branch
        uses: actions/checkout@v3
        with:
          ref: release 
      - name: find_docker_compose
        run: |
          result=$(find $GITHUB_WORKSPACE -name "docker-compose.yml")
          if [ -z "$result" ]; then
            echo "docker-compose.yml not found"
            exit 1  # Завершить выполнение
          else
            directory=$(dirname "$result")
            echo "Found docker-compose.yml at: $result"
            echo "Directory path is: $directory"
            echo "docker_compose_path=$directory" >> $GITHUB_OUTPUT
          fi
      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Set up Docker Compose
        run: sudo apt-get update && sudo apt-get install docker-compose 
      - name: Build and Start Docker Compose
        run: docker compose up -d 
      - name: Check Services list
        run: docker-compose ps
      - name: Check api
        run: nc -z "127.0.0.1" "8001" && echo "api is available" || exit 1
      - name: Check postgres
        run: nc -z "127.0.0.1" "5432" && echo "postgres is available" || exit 1
      - name: Check front
        run: nc -z "127.0.0.1" "3000" && echo "front is available" || exit 1
      - name: Check redis
        run: nc -z "127.0.0.1" "6379" && echo "redis is available" || exit 1      
        
      - name: Shut Down Docker Compose
        if: always() 
        run: docker-compose -f docker-compose.yml down
        
        
  # integration:
  #   runs-on: ubuntu-latest
  #   needs: [tests]

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v3
        
  #     - name: Create ZIP deployment package
  #       run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*

  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
  #         aws-region: ${{ env.AWS_REGION_NAME }}

  #     - name: Debug environment variables
  #       run: echo ${{ env.EB_PACKAGE_S3_BUCKET_NAME }}

  #     - name: Copy Deployment package to S3 bucket
  #       run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/

  #     - name: Print message for task end
  #       run: echo "Task for S3 complete"


  # deployment:
  #   runs-on: ubuntu-latest
  #   needs: [integration]

  #   steps:
  #     - name: Configure AWS Credentials
  #       uses: aws-actions/configure-aws-credentials@v3
  #       with:
  #         aws-access-key-id: ${{ secrets.MY_AWS_ACCESS_KEY }}
  #         aws-secret-access-key: ${{ secrets.MY_AWS_SECRET_KEY }}
  #         aws-region: ${{ env.AWS_REGION_NAME }}

  #     - name: Create new Elastic Beanstalk Application Version
  #       run: |
  #         aws elasticbeanstalk create-application-version \
  #           --application-name ${{ env.EB_APPLICATION_NAME }} \
  #           --version-label "Ver-${{ github.sha }}" \
  #           --source-bundle S3Bucket=${{ env.EB_PACKAGE_S3_BUCKET_NAME }},S3Key=${{ env.DEPLOY_PACKAGE_NAME }} 
            
  #     - name: Update Elastic Beanstalk Environment Configuration
  #       run: |
  #         aws elasticbeanstalk update-environment \
  #           --environment-name ${{ env.EB_ENVIROMENT_NAME }} \
  #           --option-settings Namespace=aws:autoscaling:launchconfiguration,OptionName=InstanceType,Value=t4g.medium \
  #           --version-label "Ver-${{ github.sha }}"            

  #     - name: Print message for task end
  #       run: echo "The deployment task is complete"        

      
      
